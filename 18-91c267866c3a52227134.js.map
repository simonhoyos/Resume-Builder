{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/utils/capitalize.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack:///./src/components/ResumeTemplates/Compact/intl/index.js","webpack:///./src/components/ResumeTemplates/Compact/Sections/Basics.jsx","webpack:///./src/components/ResumeTemplates/Compact/Sections/Publications.jsx","webpack:///./src/components/ResumeTemplates/Compact/Sections/Education.jsx","webpack:///./src/components/ResumeTemplates/Compact/Sections/Awards.jsx","webpack:///./src/components/ResumeTemplates/Compact/Sections/Skills.jsx","webpack:///./src/components/ResumeTemplates/Compact/Index.jsx"],"names":["capitalize","string","Error","charAt","toUpperCase","slice","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","Component","root","concat","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","translations","locale","messages","map","translation","createIntl","createIntlCache","useStyles","makeStyles","resumeBasicsWrapper","subtitle","textTransform","fontWeight","resumeName","resumeLabel","resumeSummary","address","contactInfo","socialMedia","website","aboutAndContactWrapper","aboutWrapper","paddingRight","contactWrapper","locationWrapper","marginRight","Basics","basics","label","picture","email","phone","url","summary","location","enabled","locationEnabled","value","postalCode","city","countryCode","region","profiles","intl","useContext","IntlContext","formatMessage","id","profile","profileUrl","key","uuid","Publications","publications","length","resumePublications","publication","publisher","releaseDate","Education","education","educations","classNames","resumeEducation","courses","institution","area","studyType","startDate","endDate","date","Date","diffDays","Math","abs","getFullYear","floor","Awards","awards","resumeAwards","award","title","awarder","Skills","skills","resumeSkills","skill","level","keywords","resumeDefaultTemplate","educationAndAwardsWrapper","educationWrapper","awardsWrapper","Compact","resume","work","volunteer","languages","interests","references","useIntl","templateIntl","useMemo","newIntl","templateIntls","find","tempIntl","defaultLocale"],"mappings":"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","file":"18-91c267866c3a52227134.js","sourcesContent":["import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\"; // It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\n\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import { createIntl, createIntlCache } from 'gatsby-plugin-intl';\r\nimport en from './en.json';\r\nimport ptBr from './pt-br.json';\r\n\r\nconst translations = [\r\n    {\r\n        locale: 'en',\r\n        messages: en,\r\n    },\r\n    {\r\n        locale: 'pt-br',\r\n        messages: ptBr,\r\n    },\r\n];\r\n\r\nexport default translations.map(\r\n    (translation) => createIntl(translation, createIntlCache())\r\n);\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport { IntlContext } from 'gatsby-plugin-intl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeBasicsWrapper: {\r\n        // TODO\r\n    },\r\n    subtitle: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: 'bold',\r\n    },\r\n    resumeName: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: 'bold',\r\n    },\r\n    resumeLabel: {\r\n        fontWeight: 'bold',\r\n    },\r\n    resumeSummary: {\r\n        // TODO\r\n    },\r\n    address: {\r\n        // TODO\r\n    },\r\n    contactInfo: {\r\n        // TODO\r\n    },\r\n    socialMedia: {\r\n        // TODO\r\n    },\r\n    website: {\r\n        // TODO\r\n    },\r\n    aboutAndContactWrapper: {\r\n        display: 'flex',\r\n    },\r\n    aboutWrapper: {\r\n        width: '60%',\r\n        paddingRight: '20px',\r\n    },\r\n    contactWrapper: {\r\n        width: '40%',\r\n    },\r\n    locationWrapper: {\r\n        display: 'inline-flex',\r\n        '&> *': {\r\n            marginRight: '5px',\r\n        },\r\n        '&> *:last-child': {\r\n            marginRight: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nconst Basics = ({\r\n    basics: {\r\n        name,\r\n        label,\r\n        picture,\r\n        email,\r\n        phone,\r\n        website,\r\n        url,\r\n        summary,\r\n        location: {\r\n            enabled: locationEnabled,\r\n            value: {\r\n                address,\r\n                postalCode,\r\n                city,\r\n                countryCode,\r\n                region,\r\n            },\r\n        },\r\n        profiles,\r\n    },\r\n}) => {\r\n    const classes = useStyles();\r\n    const intl = useContext(IntlContext);\r\n\r\n    return (\r\n        <div className={classes.resumeBasicsWrapper}>\r\n            {name?.enabled && (\r\n                <Typography\r\n                    className={classes.resumeName}\r\n                    color=\"textPrimary\"\r\n                    variant=\"h4\"\r\n                >\r\n                    {name?.value}\r\n                </Typography>\r\n            )}\r\n            {label?.enabled && (\r\n                <Typography\r\n                    className={classes.resumeLabel}\r\n                    color=\"textPrimary\"\r\n                    variant=\"body1\"\r\n                >\r\n                    {label?.value}\r\n                </Typography>\r\n            )}\r\n            <div className={classes.aboutAndContactWrapper}>\r\n                {summary?.enabled && (\r\n                    <div className={classes.aboutWrapper}>\r\n                        <Typography\r\n                            className={classes.subtitle}\r\n                            color=\"textPrimary\"\r\n                            variant=\"body1\"\r\n                        >\r\n                            {intl.formatMessage({ id: 'about' })}\r\n                        </Typography>\r\n                        <Typography\r\n                            color=\"textPrimary\"\r\n                            variant=\"body1\"\r\n                        >\r\n                            {summary?.value}\r\n                        </Typography>\r\n                    </div>\r\n                )}\r\n                {(\r\n                    email?.enabled\r\n                    || phone?.enabled\r\n                    || profiles?.enabled\r\n                    || locationEnabled\r\n                ) && (\r\n                    <div className={classes.contactWrapper}>\r\n                        <Typography\r\n                            className={classes.subtitle}\r\n                            color=\"textPrimary\"\r\n                            variant=\"body1\"\r\n                        >\r\n                            {intl.formatMessage({ id: 'contact' })}\r\n                        </Typography>\r\n                        {locationEnabled && (\r\n                            <div className={classes.locationWrapper}>\r\n                                {city?.enabled && (\r\n                                    <Typography\r\n                                        color=\"textPrimary\"\r\n                                        variant=\"body1\"\r\n                                    >\r\n                                        {city?.value}{','}\r\n                                    </Typography>\r\n                                )}\r\n                                {postalCode?.enabled && (\r\n                                    <Typography\r\n                                        color=\"textPrimary\"\r\n                                        variant=\"body1\"\r\n                                    >\r\n                                        {postalCode?.value}\r\n                                    </Typography>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        {phone?.enabled && (\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                variant=\"body1\"\r\n                            >\r\n                                {phone?.value}\r\n                            </Typography>\r\n                        )}\r\n                        {email?.enabled && (\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                variant=\"body1\"\r\n                            >\r\n                                {email?.value}\r\n                            </Typography>\r\n                        )}\r\n                        {profiles?.enabled && profiles?.value.map((profile) => {\r\n                            const { url: profileUrl } = profile?.value || {};\r\n                            return profileUrl?.enabled && (\r\n                                <Typography\r\n                                    key={uuid()}\r\n                                    color=\"textPrimary\"\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    {profileUrl?.value}\r\n                                </Typography>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Basics;\r\n","import React, { useContext } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IntlContext } from 'gatsby-plugin-intl';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    subtitle: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: 'bold',\r\n    },\r\n}));\r\n\r\nconst Publications = ({\r\n    publications,\r\n}) => {\r\n    const classes = useStyles();\r\n    const intl = useContext(IntlContext);\r\n\r\n    return publications.length > 0 && (\r\n        <div className={classes.resumePublications}>\r\n            <Typography\r\n                className={classes.subtitle}\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n            >\r\n                {intl.formatMessage({ id: 'projects' })}\r\n            </Typography>\r\n            <ul className={classes.publications}>\r\n                {publications.map((publication) => {\r\n                    if (publication?.enabled) {\r\n                        const {\r\n                            name,\r\n                            publisher,\r\n                            releaseDate,\r\n                            website,\r\n                            url,\r\n                            summary,\r\n                        } = publication?.value || {};\r\n\r\n                        return (\r\n                            <li key={uuid()}>\r\n                                {name?.enabled && (\r\n                                    <Typography\r\n                                        color=\"textPrimary\"\r\n                                        variant=\"body1\"\r\n                                    >\r\n                                        {name?.value}\r\n                                    </Typography>\r\n                                )}\r\n                                {summary?.enabled && (\r\n                                    <Typography\r\n                                        color=\"textPrimary\"\r\n                                        variant=\"body1\"\r\n                                    >\r\n                                        {summary?.value}\r\n                                    </Typography>\r\n                                )}\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Publications;\r\n","import React, { useContext } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IntlContext } from 'gatsby-plugin-intl';\r\nimport { Typography } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    subtitle: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: 'bold',\r\n    },\r\n}));\r\n\r\nconst Education = ({\r\n    education: educations,\r\n    className = null,\r\n}) => {\r\n    const classes = useStyles();\r\n    const intl = useContext(IntlContext);\r\n\r\n    return educations.length > 0 && (\r\n        <div\r\n            className={classNames(className, classes.resumeEducation)}\r\n        >\r\n            <Typography\r\n                className={classes.subtitle}\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n            >\r\n                {intl.formatMessage({ id: 'education' })}\r\n            </Typography>\r\n            <ul className={classes.courses}>\r\n                {educations.map((education) => {\r\n                    if (education?.enabled) {\r\n                        const {\r\n                            institution,\r\n                            area,\r\n                            studyType,\r\n                            startDate,\r\n                            endDate,\r\n                            // gpa,\r\n                            courses,\r\n                        } = education?.value || {};\r\n\r\n                        const date = new Date(endDate?.value);\r\n                        const diffTime = Math.abs(date - new Date(startDate?.value));\r\n                        const diffDays = diffTime / 86400000;\r\n\r\n                        return (\r\n                            <li key={uuid()}>\r\n                                <Typography\r\n                                    color=\"textPrimary\"\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    {endDate?.enabled && (\r\n                                        <span>\r\n                                            {date.getFullYear()}\r\n                                        </span>\r\n                                    )}\r\n                                    {area?.enabled && (\r\n                                        <span>\r\n                                            {area?.value}\r\n                                        </span>\r\n                                    )}\r\n                                    {institution?.enabled && (\r\n                                        <span>\r\n                                            {institution?.value}\r\n                                        </span>\r\n                                    )}\r\n                                </Typography>\r\n                                <Typography\r\n                                    color=\"textPrimary\"\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    {studyType?.enabled && (\r\n                                        <span>\r\n                                            {studyType?.value}\r\n                                        </span>\r\n                                    )}\r\n                                    {endDate?.enabled && startDate?.enabled && (\r\n                                        <span>\r\n                                            (\r\n                                            {Math.floor(diffDays / 30)}\r\n                                            {' '}\r\n                                            {intl.formatMessage({ id: 'months' })}\r\n                                            )\r\n                                        </span>\r\n                                    )}\r\n                                    {courses?.enabled && courses?.value?.[0]?.enabled && (\r\n                                        <span>\r\n                                            {courses?.value?.[0]?.value}\r\n                                        </span>\r\n                                    )}\r\n                                </Typography>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Education;\r\n","import React, { useContext } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IntlContext } from 'gatsby-plugin-intl';\r\nimport { Typography } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    subtitle: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: 'bold',\r\n    },\r\n}));\r\n\r\nconst Awards = ({\r\n    awards,\r\n    className = null,\r\n}) => {\r\n    const classes = useStyles();\r\n    const intl = useContext(IntlContext);\r\n\r\n    return awards.length > 0 && (\r\n        <div\r\n            className={classNames(className, classes.resumeAwards)}\r\n        >\r\n            <Typography\r\n                className={classes.subtitle}\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n            >\r\n                {intl.formatMessage({ id: 'achievements' })}\r\n            </Typography>\r\n            <ul className={classes.awards}>\r\n                {awards.map((award) => {\r\n                    if (award?.enabled) {\r\n                        const {\r\n                            title,\r\n                            date,\r\n                            awarder,\r\n                            summary,\r\n                        } = award?.value || {};\r\n\r\n                        return (\r\n                            <li key={uuid()}>\r\n                                lalala\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Awards;\r\n","import React, { useContext } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IntlContext } from 'gatsby-plugin-intl';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    subtitle: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: 'bold',\r\n    },\r\n}));\r\n\r\nconst Skills = ({ skills }) => {\r\n    const classes = useStyles();\r\n    const intl = useContext(IntlContext);\r\n\r\n    return skills.length > 0 && (\r\n        <div className={classes.resumeSkills}>\r\n            <Typography\r\n                className={classes.subtitle}\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n            >\r\n                {intl.formatMessage({ id: 'skills' })}\r\n            </Typography>\r\n            <ul className={classes.skills}>\r\n                {skills.map((skill) => {\r\n                    if (skill?.enabled) {\r\n                        const {\r\n                            name,\r\n                            level,\r\n                            keywords,\r\n                        } = skill?.value || {};\r\n                        return (\r\n                            <li key={uuid()}>\r\n                                lala\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { RawIntlProvider, useIntl } from 'gatsby-plugin-intl';\r\n\r\nimport templateIntls from './intl';\r\n\r\n// Components\r\nimport Basics from './Sections/Basics';\r\nimport Publications from './Sections/Publications';\r\nimport Education from './Sections/Education';\r\nimport Awards from './Sections/Awards';\r\nimport Skills from './Sections/Skills';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeDefaultTemplate: {\r\n        // TODO\r\n    },\r\n    educationAndAwardsWrapper: {\r\n        display: 'flex',\r\n    },\r\n    educationWrapper: {\r\n        width: '50%',\r\n        paddingRight: '20px',\r\n    },\r\n    awardsWrapper: {\r\n        width: '50%',\r\n    },\r\n}));\r\n\r\nconst Compact = ({\r\n    resume: {\r\n        basics,\r\n        work,\r\n        skills,\r\n        education,\r\n        awards,\r\n        volunteer,\r\n        publications,\r\n        languages,\r\n        interests,\r\n        references,\r\n    },\r\n}) => {\r\n    const intl = useIntl();\r\n    const classes = useStyles();\r\n    const templateIntl = useMemo(() => {\r\n        const newIntl = templateIntls.find(\r\n            (tempIntl) => tempIntl.locale === intl.locale\r\n        );\r\n\r\n        if (!newIntl) {\r\n            return templateIntls.find(\r\n                (tempIntl) => tempIntl.locale === intl.defaultLocale\r\n            );\r\n        }\r\n\r\n        return newIntl;\r\n    }, [intl.locale]);\r\n\r\n    return (\r\n        <RawIntlProvider\r\n            value={templateIntl}\r\n        >\r\n            <div className={classes.resumeDefaultTemplate}>\r\n                {basics?.enabled && (\r\n                    <Basics\r\n                        basics={basics?.value}\r\n                    />\r\n                )}\r\n                {publications?.enabled && (\r\n                    <Publications\r\n                        publications={publications?.value}\r\n                    />\r\n                )}\r\n                <div className={classes.educationAndAwardsWrapper}>\r\n                    {education?.enabled && (\r\n                        <Education\r\n                            className={classes.educationWrapper}\r\n                            education={education?.value}\r\n                        />\r\n                    )}\r\n                    {awards?.enabled && skills?.enabled && (\r\n                        <div>\r\n                            {awards?.enabled && (\r\n                                <Awards\r\n                                    className={classes.awardsWrapper}\r\n                                    awards={awards?.value}\r\n                                />\r\n                            )}\r\n                            {skills?.enabled && (\r\n                                <Skills\r\n                                    skills={skills?.value}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </RawIntlProvider>\r\n    );\r\n};\r\n\r\nexport default Compact;\r\n"],"sourceRoot":""}